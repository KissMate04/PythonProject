************* Module pythonproject.boss
pythonproject\boss.py:21:4: W0246: Useless parent or super() delegation in method '__init__' (useless-parent-delegation)
pythonproject\boss.py:21:4: R0913: Too many arguments (8/5) (too-many-arguments)
pythonproject\boss.py:21:4: R0917: Too many positional arguments (8/5) (too-many-positional-arguments)
************* Module pythonproject.enemy
pythonproject\enemy.py:12:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
pythonproject\enemy.py:19:4: R0913: Too many arguments (8/5) (too-many-arguments)
pythonproject\enemy.py:19:4: R0917: Too many positional arguments (8/5) (too-many-positional-arguments)
************* Module pythonproject.game
pythonproject\game.py:41:0: C0103: Constant name "level" doesn't conform to UPPER_CASE naming style (invalid-name)
pythonproject\game.py:42:0: C0103: Constant name "score" doesn't conform to UPPER_CASE naming style (invalid-name)
pythonproject\game.py:43:0: C0103: Constant name "running" doesn't conform to UPPER_CASE naming style (invalid-name)
pythonproject\game.py:44:0: C0103: Constant name "in_menu" doesn't conform to UPPER_CASE naming style (invalid-name)
pythonproject\game.py:56:4: W0603: Using the global statement (global-statement)
************* Module pythonproject.launcher
pythonproject\launcher.py:1:0: C0114: Missing module docstring (missing-module-docstring)
pythonproject\launcher.py:9:0: C0116: Missing function or method docstring (missing-function-docstring)
************* Module pythonproject.main
pythonproject\main.py:270:4: R0912: Too many branches (23/12) (too-many-branches)
pythonproject\main.py:270:4: R0915: Too many statements (52/50) (too-many-statements)
pythonproject\main.py:12:0: R0915: Too many statements (127/50) (too-many-statements)
************* Module pythonproject.player
pythonproject\player.py:20:4: R0913: Too many arguments (8/5) (too-many-arguments)
pythonproject\player.py:20:4: R0917: Too many positional arguments (8/5) (too-many-positional-arguments)
pythonproject\player.py:82:4: W0246: Useless parent or super() delegation in method 'hit' (useless-parent-delegation)
************* Module pythonproject.projectile
pythonproject\projectile.py:16:4: R0913: Too many arguments (7/5) (too-many-arguments)
pythonproject\projectile.py:16:4: R0917: Too many positional arguments (7/5) (too-many-positional-arguments)
************* Module pythonproject.ship
pythonproject\ship.py:11:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)
pythonproject\ship.py:18:4: R0913: Too many arguments (8/5) (too-many-arguments)
pythonproject\ship.py:18:4: R0917: Too many positional arguments (8/5) (too-many-positional-arguments)
pythonproject\ship.py:86:8: W0107: Unnecessary pass statement (unnecessary-pass)
pythonproject\ship.py:1:0: R0801: Similar lines in 2 files
==pythonproject.enemy:[91:107]
==pythonproject.player:[51:71]
        self.damage = self.base_damage * (self.shipsize / 100)
        self.image = pygame.transform.scale(
            self.image, (self.shipsize, self.shipsize))
        self.hitbox = pygame.Rect(
            self.x,
            self.y,
            self.image.get_width(),
            self.image.get_height())
        # pylint: enable=attribute-defined-outside-init

    def move(self, keys):
        """
        Move the player based on keyboard input.

        Handles movement in four directions (up, down, left, right)
        using arrow keys or WASD.

        Args:
            keys: Keyboard state to determine which direction to move
        """ (duplicate-code)
pythonproject\ship.py:1:0: R0801: Similar lines in 2 files
==pythonproject.boss:[44:51]
==pythonproject.enemy:[44:51]
        if self.dying:
            if pygame.time.get_ticks() - self.time > 500:
                game.enemies.remove(self)
            return

        self.x += self.speed * game.DELTA_TIME * self.xdirection
        self.y += self.speed * game.DELTA_TIME * self.ydirection (duplicate-code)
pythonproject\ship.py:1:0: R0801: Similar lines in 2 files
==pythonproject.player:[54:71]
==pythonproject.ship:[57:62]
        self.hitbox = pygame.Rect(
            self.x,
            self.y,
            self.image.get_width(),
            self.image.get_height())
        # pylint: enable=attribute-defined-outside-init

    def move(self, keys):
        """
        Move the player based on keyboard input.

        Handles movement in four directions (up, down, left, right)
        using arrow keys or WASD.

        Args:
            keys: Keyboard state to determine which direction to move
        """ (duplicate-code)
pythonproject\ship.py:1:0: R0801: Similar lines in 2 files
==pythonproject.enemy:[94:107]
==pythonproject.ship:[42:57]
        self.hitbox = pygame.Rect(
            self.x,
            self.y,
            self.image.get_width(),
            self.image.get_height())

    def move(self, keys):  # pylint: disable=unused-argument
        """
        Base movement method for ships.

        Updates the hitbox position and keeps the ship within screen bounds.

        Args:
            keys: Keyboard state (used by subclasses)
        """ (duplicate-code)

------------------------------------------------------------------
Your code has been rated at 9.19/10 (previous run: 8.38/10, +0.81)